plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.9'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.26.0'
}

group 'net.uberfoo.cpm.filesystem.editor'
version '1.0.0'

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    junitVersion = '5.9.1'
}

sourceCompatibility = '19'
targetCompatibility = '19'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'net.uberfoo.cpm.filesystem.editor'
    mainClass = 'net.uberfoo.cpm.filesystem.editor.EditorApp'
}

javafx {
    version = '19'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation("net.uberfoo.cpm:cpmutils:${cpmutilsVersion}")

    implementation(platform('org.apache.logging.log4j:log4j-bom:2.19.0'))
    implementation 'org.apache.logging.log4j:log4j-api'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.14.1'

    runtimeOnly 'org.apache.logging.log4j:log4j-core'
    runtimeOnly 'org.apache.logging.log4j:log4j-slf4j2-impl'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'cpmeditor'
    }
    forceMerge "jackson-core", "jackson-annotations", "jackson-databind", "jackson-dataformat-yaml", "log4j-api", "slf4j-api", "log4j-slf4j2-impl"
    mergedModule {
        additive = true
        uses 'org.apache.logging.log4j.util.PropertySource'
        uses 'org.apache.logging.log4j.core.util.ContextDataProvider'
        uses 'org.apache.logging.log4j.core.util.WatchEventService'
        uses 'org.apache.logging.log4j.spi.Provider'
        uses 'org.apache.logging.log4j.message.ThreadDumpMessage.ThreadInfoFactory'
    }
    jpackage {
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
            imageOptions += ['--win-console']
        }
    }
}

jlinkZip {
    group = 'distribution'
}